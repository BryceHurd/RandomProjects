This code will allow your mouse to produce randomly colored circles when moving across the screena and when you click your mouse
ENJOY!

//html bellow

<!DOCTYPE html>
<html lang="en">
	<head>
    	<meta charset="utf-8">
    	<meta name="description" content="This is where your description goes">
    	<meta name="keywords" content="one, two, three">

		<title>Rainbow Canvas</title>

		<!-- external CSS link -->
		<link rel="stylesheet" href="css/normalize.css">
		<link rel="stylesheet" href="css/style.css">
	</head>
	<body>
		<canvas id = "canvas1"></canvas>
		

		<script type="text/javascript" src="js/main.js"></script>
	</body>
</html>



//CSS Below

/******************************************
/* CSS
/*******************************************/

/* Box Model Hack */
*{
  box-sizing: border-box;
}

/******************************************
/* LAYOUT
/*******************************************/
#canvas1{
position: absolute;
background: black;
width: 100%;
height: 100%;
top: 0;
left: 0;
}


/******************************************
/* ADDITIONAL STYLES
/*******************************************/



//JS Below 
const canvas = document.getElementById('canvas1');
const ctx =  canvas.getContext('2d');
const particleArray = [];

let hue = 0;

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

window.addEventListener('resize', function() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

})

const mouse = {
    x: undefined,
    y: undefined,
}
canvas.addEventListener("click", function(event){
    mouse.x = event.x
    mouse.y = event.y
    for(let i = 0; i < 10; i++) {
        particleArray.push(new Particle())
    }    
})


canvas.addEventListener('mousemove', function(event){
    mouse.x = event.x;
    mouse.y = event.y;
    for(let i = 0; i < 5; i++) {
        particleArray.push(new Particle())
    }    
    
})


class Particle {
    constructor(){
        this.x = mouse.x;
        this.y = mouse.y;
        this.size = Math.random() * 19 + 1;
        this.speedX = Math.random() * 3 - 1.5;
        this.speedY = Math.random() * 3 -  1.5;
        this.color = "hsl("+ hue + ", 100%, 50%)";
    }
    update(){
        this.x += this.speedX;
        this.y += this.speedY;
        if(this.size > 0.2){
            this.size -= 0.1;
        }
    }
    draw(){
        ctx.fillStyle = this.color;        
        ctx.lineWidth = 5;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);        
        ctx.fill();

    }
}

console.log(particleArray);

function handleParticle(){
    for(let i = 0; i < particleArray.length; i++){
        particleArray[i].update();
        particleArray[i].draw();

        // for(let j = i; j < particleArray.length; j++){
        //     const dx = particleArray[i].x - particleArray[j].x;
        //     const dy = particleArray[i].y - particleArray[j].y;
        //     const distance = Math.sqrt(dx * dx + dy * dy);
        //     if(distance < 100){
        //         ctx.beginPath();
        //         ctx.strokeStyle = particleArray[i].color;
        //         ctx.lineWidth = particleArray[i].size / 5;
        //         ctx.moveTo(particleArray[i].x, particleArray[i].y);
        //         ctx.lineTo(particleArray[j].x, particleArray[j].y);
        //         ctx.stroke();
        //         ctx.closePath;
        //     }
        // }

        if (particleArray[i].size <= 0.3){
            particleArray.splice(i,1);
            i--;
        }

    }
}

function animate(){
    ctx.clearRect(0, 0, canvas.width, canvas.height);  
    //ctx.fillStyle = "rgba(0,0,0,0.02)";
    //ctx.fillRect(0,0, canvas.width, canvas.height)    
    handleParticle(); 
    
    hue += 0.5;

    console.log(particleArray.length);
    requestAnimationFrame(animate)
}

animate();


